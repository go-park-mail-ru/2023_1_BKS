openapi: "3.0.0"
info:
  version: 1.0.0
  title: AppUniq <service User> API
  description: OpenApi 3.0 для сервиса user сайта AppUniq.
paths:
  /api/user:
    get:
      summary: Вернуть данные пользователя.
      operationId: getUser
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Ок.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
    post:
      summary: Создать нового пользователя.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: Пользователь успешно создан.
          content:
            application/jwt:
              schema:
                $ref: '#/components/schemas/JsonWebToken'
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
    put:
      summary: Обновить пользователя.
      operationId: updateUser
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '200':
          description: Пользователь успешно обновлён.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
    delete:
      summary: Удалить пользователя.
      security:
      - bearerAuth: []
      operationId: deleteUser
      responses:
        '204':
          description: Поьзователь удалён.
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
  /api/user/{id}:
    get:
      summary: Вернуть пользователя по id.
      operationId: findUserByID
      parameters:
        - name: id
          in: path
          description: ID пользователя.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Пользователь получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
                

components:
  schemas:
    CreateUser:
      allOf:
        - required:
            - Email
            - Login
            - PhoneNumber
            - Name
            - Password
            - PasswordCheck
            - Avatar
          properties:
            Email:
              type: string
              description: Email пользователя.
            Login:
              type: string
              description: Логин пользователя.
            PhoneNumber:
              type: string
              description: Номер телефона пользователя.
            Name:
              type: string
              description: Имя пользователя.
            Password:
              type: string
              description: Пароль пользователя.
            PasswordCheck:
              type: string
              description: Проверка пароля пользователя.
            Avatar:
              type: string
              description: Аватар пользователя.
    GetUser:
      allOf:
        - required:
            - ID
            - PhoneNumber
            - Name
            - Avatar
          properties:
            ID:
              type: string
              description: Логин пользователя.
            PhoneNumber:
              type: string
              description: Номер телефона пользователя.
            Name:
              type: string
              description: Имя пользователя.
            Avatar:
              type: string
              description: Аватар пользователя.
        
    ErrorHTTP:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
          
    JsonWebToken:
      description: JWT иокен
      type: string
      format: application/json
      pattern: ^([a-zA-Z0-9_=]+)\.([a-zA-Z0-9_=]+)\.([a-zA-Z0-9_\-\+\/=]+)$
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT