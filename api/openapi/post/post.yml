openapi: "3.0.0"
info:
  version: 1.0.0
  title: AppUniq <service Post> API
  description: OpenApi 3.0 для сервиса post сайта AppUniq.
servers:
  - url: https://{hostname}/api
    variables:
      hostname:
        default: localhost
paths:
  /api/sort/new/{page}:
      get:
        summary: Основнвая страница
        operationId: getAllPost
        parameters:
          - name: page
            in: path
            description: Номер страницы в отсортированной бд, от нового к старому.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Объявления получены.
            content:
              application/json:
                 schema:
                  type: array
                  items:
                    oneOf:
                      - $ref: '#/components/schemas/MiniPost'
          '204':
            description: Были просмотренны все объявления.
  
          default:
            description: Произошла ошибка.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorHTTP'
  /api/post:
    post:
      summary: Создать новое объявление.
      operationId: createPost
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost'
      responses:
        '201':
          description: Объявление успешно создано.
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
  /api/post/{id}:
    get:
      summary: Вернуть объявление по id.
      operationId: findPostByID
      parameters:
        - name: id
          in: path
          description: ID объявления.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Объявление получено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
    put:
      summary: Обновить объявление.
      operationId: updatePost
      security:
      - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID объявления.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePost'
      responses:
        '200':
          description: Объявление успешно обновлено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
    delete:
      summary: Удалить объявление.
      operationId: deletePost
      security:
      - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID объявления.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Пользователь удалён.
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
  /api/close/{id}:
    put:
      summary: Закрыть объявление.
      operationId: closePost
      security:
      - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID объявления.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Объявление успешно обновлено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
  /api/post/user/{idUser}/{page}:
    get:
      summary: Вернуть объявления по id пользователя.
      operationId: findPostByUserID
      parameters:
        - name: idUser
          in: path
          description: ID пользоввателя.
          required: true
          schema:
            type: string
        - name: page
          in: path
          description: Старница.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Объявления получено.
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Post'
        '204':
            description: Были просмотренны все объявления.
        default:
          description: Произошла ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorHTTP'
                


components:
  schemas:
    MiniPost:
      allOf:
        - required:
            - UserId
            - Title
            - Name
            - PostId
            - Views
            - Price
            - PathImages
          properties:
            UserId:
              type: string
              description: ID пользователя.
            Name:
              type: string
              description: Имя пользователя.
            PostId:
              type: string
              description: ID объявления.
            Title:
              type: string
              description: Названия объявления.
            Views:
              type: integer
              description: Количество просмотров.
            Price:
              type: string
              description: Цена объявления.
            PathImages:
              type: array
              items:
                type: string
                description: Изображение.
  
  
    CreatePost:
      allOf:
        - required:
            - Title
            - Description
            - Price
            - Tag
            - PathImages
          properties:
            Title:
              type: string
              description: Названия объявления.
            Description:
              type: string
              description: Содержание объявления.
            Price:
              type: string
              description: Цена объявления.
            Tag:
              type: string
              description: Категория.
            PathImages:
              type: array
              items:
                type: string
                description: Изображение.
                
              
    Post:
      allOf:
        - required:
            - UserId
            - Title
            - Description
            - Price
            - Tag
            - Close
            - Views
            - PathImages
          properties:
            UserId:
              type: string
              description: Id пользователя.
            Title:
              type: string
              description: Названия объявления.
            Description:
              type: string
              description: Содержание объявления.
            Views:
              type: integer
              description: Количество просмотров.
            Price:
              type: string
              description: Цена объявления.
            Tag:
              type: string
              description: Категория.
            Close:
              type: boolean
              description: Закрыто ли объявление.
            PathImages:
              type: array
              items:
                type: string
                description: Изображение.

    ErrorHTTP:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
          
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
