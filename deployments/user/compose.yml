version: "3.9"
services:

  nginx:
    image: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 8080:80
    

  auth-service:
    container_name: "auth_service"
    build: ./auth
    ports:
      - "8082:8082"
    expose:
      - "8085"
    networks:
      - postgres-user-network

  user-service:
    container_name: "user_service"
    build: ./user
    ports:
      - "8080:8080"
    expose:
      - "8081"
    depends_on:
      postgres-user:
        condition: service_healthy
    networks:
      - postgres-user-network

  postgres-user:
    container_name: "postgres_user"
    image: postgres
    expose:
      - "5432"
    environment:
      POSTGRES_DB: "user"
      POSTGRES_USER: "appuniq"
      POSTGRES_PASSWORD: "uniq123"
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U appuniq -d user"]
        interval: 4s
        timeout: 3s
        retries: 5
    volumes:
      - ./user/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgres-user-network
  
  # postgres-post:
  #   container_name: "postgres_post"
  #   image: postgres
  #   expose:
  #     - "5432"
  #   environment:
  #     POSTGRES_DB: "user"
  #     POSTGRES_USER: "appuniq"
  #     POSTGRES_PASSWORD: "uniq123"
  #   healthcheck:
  #       test: ["CMD-SHELL", "pg_isready -U appuniq -d user"]
  #       interval: 4s
  #       timeout: 3s
  #       retries: 5
  #   volumes:
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - postgres-post-network


networks:
  appuniq-service:
    name: appuniq-service
    driver: bridge  
  postgres-user-network:
    name: postgres-user-network
    driver: bridge
  # postgres-post-network:
  #   name: postgres-post-network
  #   driver: bridge