// Package v2 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package v2

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// CreateUser defines model for CreateUser.
type CreateUser struct {
	// Avatar Аватар пользователя.
	Avatar string `json:"Avatar"`

	// Email Email пользователя.
	Email string `json:"Email"`

	// FirstName Имя пользователя.
	FirstName string `json:"FirstName"`

	// Login Логин пользователя.
	Login string `json:"Login"`

	// Password Пароль пользователя.
	Password string `json:"Password"`

	// PasswordCheck Проверка пароля пользователя.
	PasswordCheck string `json:"PasswordCheck"`

	// Patronimic Отчество пользователя.
	Patronimic string `json:"Patronimic"`

	// PhoneNumber Логин пользователя.
	PhoneNumber string `json:"PhoneNumber"`

	// SecondName Фамилия пользователя.
	SecondName string `json:"SecondName"`
}

// ErrorHTTP defines model for ErrorHTTP.
type ErrorHTTP struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`
}

// GetUser defines model for GetUser.
type GetUser struct {
	// Avatar Аватар пользователя.
	Avatar string `json:"Avatar"`

	// FirstName Имя пользователя.
	FirstName string `json:"FirstName"`

	// ID Логин пользователя.
	ID string `json:"ID"`

	// Patronimic Отчество пользователя.
	Patronimic string `json:"Patronimic"`

	// PhoneNumber Логин пользователя.
	PhoneNumber string `json:"PhoneNumber"`

	// SecondName Фамилия пользователя.
	SecondName string `json:"SecondName"`
}

// JsonWebToken JWT is built in the following format:
//   f"base64urlEncoding(header) + '.' + base64urlEncoding(payload) + '.' + base64urlEncoding(signature)"
// header is an object containing -> {"alg": {CHOSEN_ALG}, "typ": "JWT"}
// payload is an object containing the claims (data of jwt)
// signature is an encoded with a PRIVATE_KEY object by our CHOSEN_ALG from the following format:
//   CHOSEN_ALG( PRIVATE_KEY, base64urlEncoding(header) + '.' + base64urlEncoding(payload))
type JsonWebToken = string

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = CreateUser

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = CreateUser
